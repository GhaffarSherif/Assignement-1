#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="master")]
public partial class UserDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertProfile(Profile instance);
  partial void UpdateProfile(Profile instance);
  partial void DeleteProfile(Profile instance);
  partial void InsertMessage(Message instance);
  partial void UpdateMessage(Message instance);
  partial void DeleteMessage(Message instance);
  #endregion
	
	public UserDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["masterConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public UserDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public UserDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Profile> Profiles
	{
		get
		{
			return this.GetTable<Profile>();
		}
	}
	
	public System.Data.Linq.Table<Message> Messages
	{
		get
		{
			return this.GetTable<Message>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profile")]
public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Username;
	
	private string _Password;
	
	private string _FirstName;
	
	private string _Lastname;
	
	private string _Gender;
	
	private System.Nullable<System.DateTime> _DateOfBirth;
	
	private string _Street;
	
	private string _City;
	
	private string _Province;
	
	private string _Country;
	
	private string _PostalCode;
	
	private EntitySet<Message> _Messages;
	
	private EntitySet<Message> _Messages1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    #endregion
	
	public Profile()
	{
		this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
		this._Messages1 = new EntitySet<Message>(new Action<Message>(this.attach_Messages1), new Action<Message>(this.detach_Messages1));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50)")]
	public string Lastname
	{
		get
		{
			return this._Lastname;
		}
		set
		{
			if ((this._Lastname != value))
			{
				this.OnLastnameChanging(value);
				this.SendPropertyChanging();
				this._Lastname = value;
				this.SendPropertyChanged("Lastname");
				this.OnLastnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
	public System.Nullable<System.DateTime> DateOfBirth
	{
		get
		{
			return this._DateOfBirth;
		}
		set
		{
			if ((this._DateOfBirth != value))
			{
				this.OnDateOfBirthChanging(value);
				this.SendPropertyChanging();
				this._DateOfBirth = value;
				this.SendPropertyChanged("DateOfBirth");
				this.OnDateOfBirthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50)")]
	public string Street
	{
		get
		{
			return this._Street;
		}
		set
		{
			if ((this._Street != value))
			{
				this.OnStreetChanging(value);
				this.SendPropertyChanging();
				this._Street = value;
				this.SendPropertyChanged("Street");
				this.OnStreetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(50)")]
	public string Province
	{
		get
		{
			return this._Province;
		}
		set
		{
			if ((this._Province != value))
			{
				this.OnProvinceChanging(value);
				this.SendPropertyChanging();
				this._Province = value;
				this.SendPropertyChanged("Province");
				this.OnProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(50)")]
	public string PostalCode
	{
		get
		{
			return this._PostalCode;
		}
		set
		{
			if ((this._PostalCode != value))
			{
				this.OnPostalCodeChanging(value);
				this.SendPropertyChanging();
				this._PostalCode = value;
				this.SendPropertyChanged("PostalCode");
				this.OnPostalCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Message", Storage="_Messages", ThisKey="Username", OtherKey="Reciever")]
	public EntitySet<Message> Messages
	{
		get
		{
			return this._Messages;
		}
		set
		{
			this._Messages.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Message1", Storage="_Messages1", ThisKey="Username", OtherKey="Sender")]
	public EntitySet<Message> Messages1
	{
		get
		{
			return this._Messages1;
		}
		set
		{
			this._Messages1.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Messages(Message entity)
	{
		this.SendPropertyChanging();
		entity.Profile = this;
	}
	
	private void detach_Messages(Message entity)
	{
		this.SendPropertyChanging();
		entity.Profile = null;
	}
	
	private void attach_Messages1(Message entity)
	{
		this.SendPropertyChanging();
		entity.Profile1 = this;
	}
	
	private void detach_Messages1(Message entity)
	{
		this.SendPropertyChanging();
		entity.Profile1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Message")]
public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MessageId;
	
	private string _Sender;
	
	private string _Reciever;
	
	private System.Nullable<System.TimeSpan> _Time;
	
	private string _MessageText;
	
	private EntityRef<Profile> _Profile;
	
	private EntityRef<Profile> _Profile1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIdChanging(int value);
    partial void OnMessageIdChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnRecieverChanging(string value);
    partial void OnRecieverChanged();
    partial void OnTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    #endregion
	
	public Message()
	{
		this._Profile = default(EntityRef<Profile>);
		this._Profile1 = default(EntityRef<Profile>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MessageId
	{
		get
		{
			return this._MessageId;
		}
		set
		{
			if ((this._MessageId != value))
			{
				this.OnMessageIdChanging(value);
				this.SendPropertyChanging();
				this._MessageId = value;
				this.SendPropertyChanged("MessageId");
				this.OnMessageIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Sender
	{
		get
		{
			return this._Sender;
		}
		set
		{
			if ((this._Sender != value))
			{
				if (this._Profile1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSenderChanging(value);
				this.SendPropertyChanging();
				this._Sender = value;
				this.SendPropertyChanged("Sender");
				this.OnSenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reciever", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Reciever
	{
		get
		{
			return this._Reciever;
		}
		set
		{
			if ((this._Reciever != value))
			{
				if (this._Profile.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRecieverChanging(value);
				this.SendPropertyChanging();
				this._Reciever = value;
				this.SendPropertyChanged("Reciever");
				this.OnRecieverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Time")]
	public System.Nullable<System.TimeSpan> Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MessageText
	{
		get
		{
			return this._MessageText;
		}
		set
		{
			if ((this._MessageText != value))
			{
				this.OnMessageTextChanging(value);
				this.SendPropertyChanging();
				this._MessageText = value;
				this.SendPropertyChanged("MessageText");
				this.OnMessageTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Message", Storage="_Profile", ThisKey="Reciever", OtherKey="Username", IsForeignKey=true)]
	public Profile Profile
	{
		get
		{
			return this._Profile.Entity;
		}
		set
		{
			Profile previousValue = this._Profile.Entity;
			if (((previousValue != value) 
						|| (this._Profile.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Profile.Entity = null;
					previousValue.Messages.Remove(this);
				}
				this._Profile.Entity = value;
				if ((value != null))
				{
					value.Messages.Add(this);
					this._Reciever = value.Username;
				}
				else
				{
					this._Reciever = default(string);
				}
				this.SendPropertyChanged("Profile");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Message1", Storage="_Profile1", ThisKey="Sender", OtherKey="Username", IsForeignKey=true)]
	public Profile Profile1
	{
		get
		{
			return this._Profile1.Entity;
		}
		set
		{
			Profile previousValue = this._Profile1.Entity;
			if (((previousValue != value) 
						|| (this._Profile1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Profile1.Entity = null;
					previousValue.Messages1.Remove(this);
				}
				this._Profile1.Entity = value;
				if ((value != null))
				{
					value.Messages1.Add(this);
					this._Sender = value.Username;
				}
				else
				{
					this._Sender = default(string);
				}
				this.SendPropertyChanged("Profile1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
